/*
 * standardOptionBox.java
 *
 * Created on October 3, 2002, 3:04 PM
 */

/**
 *
 * @author  Administrator
 */
public class standardOptionBox extends javax.swing.JFrame {

    /** Creates new form standardOptionBox */
    public standardOptionBox() {
        initComponents();
        updateComponentStates();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
private void initComponents() {//GEN-BEGIN:initComponents
buttonGroup1 = new javax.swing.ButtonGroup();
buttonGroup2 = new javax.swing.ButtonGroup();
jPanel1 = new javax.swing.JPanel();
noRepeatRadio = new javax.swing.JRadioButton();
unconstrainedRadio = new javax.swing.JRadioButton();
minDistRadio = new javax.swing.JRadioButton();
minDistField = new javax.swing.JTextField();
jButton1 = new javax.swing.JButton();
jButton2 = new javax.swing.JButton();
jButton3 = new javax.swing.JButton();
colorCorrectSelect = new javax.swing.JCheckBox();
colorCorrectField = new javax.swing.JTextField();
jPanel2 = new javax.swing.JPanel();
linearRadio = new javax.swing.JRadioButton();
randomRadio = new javax.swing.JRadioButton();


getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

setTitle("Basic Rendering Options");
addWindowListener(new java.awt.event.WindowAdapter() {
public void windowClosing(java.awt.event.WindowEvent evt) {
exitForm(evt);
}
});

jPanel1.setLayout(new java.awt.GridLayout(4, 1));

jPanel1.setBorder(new javax.swing.border.TitledBorder("Tile Repetition"));
noRepeatRadio.setText("Do Not Repeat Tiles");
buttonGroup1.add(noRepeatRadio);
noRepeatRadio.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
noRepeatRadioActionPerformed(evt);
}
});

jPanel1.add(noRepeatRadio);

unconstrainedRadio.setText("Unconstrained Repetition");
buttonGroup1.add(unconstrainedRadio);
unconstrainedRadio.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
unconstrainedRadioActionPerformed(evt);
}
});

jPanel1.add(unconstrainedRadio);

minDistRadio.setSelected(true);
minDistRadio.setText("Minimum Distance Between Tiles");
buttonGroup1.add(minDistRadio);
minDistRadio.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
minDistRadioActionPerformed(evt);
}
});

jPanel1.add(minDistRadio);

minDistField.setColumns(3);
minDistField.setText("10");
minDistField.setMaximumSize(new java.awt.Dimension(21, 21));
jPanel1.add(minDistField);

getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 500, 110));

jButton1.setText("Done");
buttonGroup1.add(jButton1);
jButton1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton1ActionPerformed(evt);
}
});

getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, 70, -1));

jButton2.setText("Cancel");
buttonGroup1.add(jButton2);
jButton2.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton2ActionPerformed(evt);
}
});

getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, -1, -1));

jButton3.setText("Algorithm Options");
buttonGroup1.add(jButton3);
getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, -1, -1));

colorCorrectSelect.setSelected(true);
colorCorrectSelect.setText("Color Correct Tiles %");
colorCorrectSelect.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
colorCorrectSelectActionPerformed(evt);
}
});

getContentPane().add(colorCorrectSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

colorCorrectField.setText("50");
getContentPane().add(colorCorrectField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 40, -1));

jPanel2.setLayout(new java.awt.GridLayout(2, 1));

jPanel2.setBorder(new javax.swing.border.TitledBorder("Render Tile Order"));
linearRadio.setText("Linear");
buttonGroup2.add(linearRadio);
jPanel2.add(linearRadio);

randomRadio.setSelected(true);
randomRadio.setText("Random");
buttonGroup2.add(randomRadio);
jPanel2.add(randomRadio);

getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 500, 70));

pack();
}//GEN-END:initComponents

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    this.hide();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if ( noRepeatRadio.isSelected() ) {
        this.tileRep = 0;
    } else if ( unconstrainedRadio.isSelected() ) {
        this.tileRep = 1;
    } else {
        this.tileRep = 2;
        this.minDistNum = Integer.parseInt(minDistField.getText().toString());
    }

    if ( linearRadio.isSelected() ) {
        this.tileOrder = 0;
    } else {
        this.tileOrder = 1;
    }

    if ( colorCorrectSelect.isSelected() ) {
        this.colorCorrectPercent = Integer.parseInt(colorCorrectField.getText().toString());
    } else {
        this.colorCorrectPercent = 0;
    }
    this.hide();
}//GEN-LAST:event_jButton1ActionPerformed

private void noRepeatRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noRepeatRadioActionPerformed
    updateComponentStates();
}//GEN-LAST:event_noRepeatRadioActionPerformed

private void unconstrainedRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unconstrainedRadioActionPerformed
    updateComponentStates();
}//GEN-LAST:event_unconstrainedRadioActionPerformed

private void minDistRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minDistRadioActionPerformed
    updateComponentStates();
}//GEN-LAST:event_minDistRadioActionPerformed

private void colorCorrectSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorCorrectSelectActionPerformed
    updateComponentStates();
}//GEN-LAST:event_colorCorrectSelectActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void updateComponentStates() {
        if ( minDistRadio.isSelected() ) {
            minDistField.setEnabled(true);
        } else {
            minDistField.setEnabled(false);
        }

        if ( colorCorrectSelect.isSelected() ) {
            colorCorrectField.setEnabled(true);
        } else {
            colorCorrectField.setEnabled(false);
        }
    }

    public int getTileRep() {
        return tileRep;
    }

    public int getMinDistNum() {
        return minDistNum;
    }

    public int getTileOrder() {
        return tileOrder;
    }

    public int getColorCorrectPercent() {
        if (colorCorrectSelect.isSelected()) {
            return colorCorrectPercent;
        } else {
            return 0;
        }
    }


// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.ButtonGroup buttonGroup1;
private javax.swing.ButtonGroup buttonGroup2;
private javax.swing.JPanel jPanel1;
private javax.swing.JRadioButton noRepeatRadio;
private javax.swing.JRadioButton unconstrainedRadio;
private javax.swing.JRadioButton minDistRadio;
private javax.swing.JTextField minDistField;
private javax.swing.JButton jButton1;
private javax.swing.JButton jButton2;
private javax.swing.JButton jButton3;
private javax.swing.JCheckBox colorCorrectSelect;
private javax.swing.JTextField colorCorrectField;
private javax.swing.JPanel jPanel2;
private javax.swing.JRadioButton linearRadio;
private javax.swing.JRadioButton randomRadio;
// End of variables declaration//GEN-END:variables

    private int tileRep = 0;  // 0 = no repeat, 1 = unconstrained, 2 = min dist.
    private int minDistNum = 0;  // The minimum distance between tiles.
    private int tileOrder = 0;  // 0 = linear, 1 = random.
    private int colorCorrectPercent = 0;  // The amount to color correct.
}
